{"version":3,"sources":["components/Card.js","components/Modal.js","App.js","Editor.js","reportWebVitals.js","index.js"],"names":["Card","props","name","id","email","path","window","location","href","className","src","alt","style","color","paillierBigint","require","Modal","useState","privateKey","setPrivateKey","warnning","setwarnning","title","setTitle","message","setMessage","animation","setAnimation","protection","setProtection","server","stringify","value","undefined","JSON","_","v","GenerateKeys","e","a","preventDefault","trim","generateRandomKeys","key","publicKey","stringedPK","fetch","method","headers","body","content","then","response","json","data","catch","error","x","onSubmit","type","onChange","event","target","required","disabled","onClick","setTimeout","setshowModal","reload","App","files","setFiles","showModal","console","log","useEffect","filesList","i","length","file","push","Editor","orValue","setorValue","areaOrValue","setareaOrValue","__html","orValueEditable","setorValueEditable","setprevValueEditable","areaOrValueEditable","setareaOrValueEditable","setoriginalPlainText","currentSelection","setcurrentSelection","disable","setDisable","originalText","setoriginalText","fileId","pathname","replace","myPublicKey","setmyPublicKey","myPrivateKey","setmyPrivateKey","textInput","useRef","setAreas","text","SubmitToServer","textArray","split","zero","encrypt","time","letter","Number","charCodeAt","t1","timeEnd","parse","m","match","BigInt","PublicKey","n","g","foo","prompt","PrivateKey","lambda","mu","_p","_q","verify","verify2","decrypt","alert","origin","myText","element","String","fromCharCode","passedValue","changeTo","DOMPurify","sanitize","ALLOWED_TAGS","ALLOWED_ATTR","dangerouslySetInnerHTML","ref","onKeyPress","keyCode","current","selectionStart","selectionEnd","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","exact","component","document","getElementById"],"mappings":"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","file":"static/js/main.a3890134.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst Card = (props) => {\r\n  const {name , email , id} = props;\r\n  const path = `${window.location.href}file/${id}`\r\n    return (\r\n      <a href={path}>\r\n        <div className=\"myCard dib br2  ma2 grow  shadow-5 tc\" >\r\n        {/* <img src={`https://robohash.org/${id}?set=set4&size=200x200`} alt=\"profile\"/> */}\r\n        <img src='./contract2.png' alt=\"profile\"  className=\"icons\"/>\r\n        <br></br>\r\n        <div className=\"cardTitle \">\r\n          <h2 className=\"title\">\r\n            {name}\r\n            </h2>\r\n            <span  style={{color:\"white\"}}> ID : {id} </span>\r\n        </div>\r\n        </div>\r\n        </a>\r\n    )\r\n}\r\n\r\nexport default Card;\r\n","import React from 'react';\r\nimport './Modal.scss'\r\nimport {useState, useEffect} from 'react';\r\n\r\nconst paillierBigint = require('paillier-bigint')\r\n\r\n\r\nconst Modal = (props) => {\r\n\r\n  const [privateKey, setPrivateKey] = useState(\"\")\r\n  const [warnning, setwarnning] = useState(false)\r\n  const [title, setTitle] = useState(\"\")\r\n  const [message, setMessage] = useState(\"\")\r\n  const [animation, setAnimation] = useState(\"in\")\r\n  const [protection, setProtection] = useState(false)\r\n  const server = props.server\r\n\r\n  function stringify(value) {\r\n    if (value !== undefined) {\r\n        return JSON.stringify(value, (_, v) => typeof v === 'bigint' ? `${v}n` : v);\r\n    }\r\n}\r\n\r\n  const GenerateKeys = async (e) =>{\r\n    setProtection(true)\r\n    e.preventDefault()\r\n\r\n    if ( title.trim() == \"\"){\r\n      return \r\n    }\r\n    setMessage(\"Generating the keys & the file...\")\r\n    const { publicKey, privateKey } = await paillierBigint.generateRandomKeys(3072)\r\n    for (const key in privateKey) {\r\n      privateKey.[`${key}`] = stringify(privateKey.[`${key}`])\r\n    }\r\n    setPrivateKey(JSON.stringify(privateKey))\r\n    setwarnning(true)\r\n\r\n    const stringedPK = (stringify(publicKey))\r\n    fetch(`${server}/id`,\r\n  {\r\n    method: 'post',\r\n    headers :{ 'content-type':'application/json'},\r\n    body : JSON.stringify({\r\n      content: [],\r\n      publicKey: stringedPK,\r\n      title: title\r\n    })\r\n  })\r\n  .then ( response => response.json())\r\n  .then ( data => {\r\n    // console.log(data)\r\n    setMessage(data.message)\r\n    setProtection(false)\r\n  }).catch((error) => {\r\n    setMessage(\"Failed to generate the file\")\r\n    setProtection(false)\r\n\r\n    // console.log('Error:', error);\r\n  });\r\n\r\n  }\r\n\r\n\r\n  const closeIt = (e) =>{\r\n    e.preventDefault()\r\n\r\n    setAnimation(\"out\")\r\n    setTimeout(function(){\r\n      props.setshowModal(false) \r\n      window.location.reload(false);\r\n    }, 2000);\r\n\r\n    \r\n  }\r\n  let x = `modal ld ld-slide-ltr-${animation}`\r\n  \r\n\r\n  return (\r\n    <div className={x}>\r\n     <h2>Create new File </h2>\r\n     <form onSubmit={GenerateKeys}>\r\n\r\n     <div className=\"content\">\r\n       <div className=\"db center\">\r\n      <label>File Name</label>\r\n      <input className=\"ma2 \" type=\"text\" onChange={(event)=> setTitle(event.target.value)} required></input>\r\n      </div>\r\n      <div className=\"db \">\r\n      <label className=\"dib ma2\">Your Private Key:\r\n       </label>\r\n       <textarea id=\"privatekey\"className=\"privateField center fieldcontainer\" disabled={true}\r\n      value={privateKey}>\r\n      </textarea>\r\n      \r\n      </div>\r\n      \r\n      {warnning ? <p style={{color:\"red\"}}> Make sure to save your private key,\r\n      <br></br>\r\n       you will use it to decrypt your file.\r\n       </p>\r\n       : \"\"}\r\n       <p style={{color:\"red\"}}>{message}</p>\r\n\r\n     </div>\r\n     <div className=\"actions\">\r\n     <button  className=\"ma2 \"\r\n      disabled={protection? true:false}\r\n      >Create File</button>\r\n     <button onClick={closeIt}>close</button>\r\n\r\n     </div>\r\n     </form>\r\n     </div>\r\n   )\r\n\r\n}\r\n\r\nexport default Modal\r\n","import './App.css';\n// import './button.scss';\nimport {Route, BrowserRouter as Router , Switch, Link } from 'react-router-dom'\nimport React,{useState, useEffect} from 'react';\n\nimport Card from './components/Card'\nimport CardList from './components/CardList';\nimport Modal from './components/Modal'\nfunction App() {\n  const [files, setFiles]= useState([])\n  const [loadFile, setLoadFile] = useState(-1)\n  const [server ,setServer] = useState(\"https://homomorphic-server.herokuapp.com\");\n  const [showModal, setshowModal] = useState(false)\n  console.log(\" keyyyyy \\n\", `\n  {\"lambda\":\"\\\"2385128274998604186348365713560752968760405693505101775118516919851343466617545084168730919590431984722960235639807801309473610654474668626657999131708989625473845831016134764748121799156852049443164020599869321359217130616448044729179882742660109412744034702572502677041213980341841433873892716315804279162033263694832843262854216862179439882226029587827502632430499229885692432298117362891266842261359722415154205549214063784336006501313745233511330109769127714724620623943199526303448837404177743121009092100254844757824123591774224888704420211127233018588942124443461742603800425960621498594936120724362659233509526755357103794867118599779567940538716769473094947135635267931896658069685140762895817920906045573541584345349135593275508554900986767271590614299893155934201850521402669871837424141242526615236905746970866085469609917249101274762120229917245620965325837991934692544176487045181318972862545942747693709832324n\\\"\",\"mu\":\"\\\"4568304398421090445630397328660877292304485369792641475046671773738216190320458962212349119327235994374298504022894372560528915554539097636424104261566556612519754378003491092703166489575303510268015358716431088917065491852901296210847330434172474198852403121069463502382505311934404349826511995099926699473995782468832020845076671070374906795947229381231291957170182369382581223137833897760030983620328213060866690355341775318769293494905852494012637165622299095770806444425186677632373922238172686015447071980759848553602348086690343280154269056309738362667881063147599715823808051478553471317411023525712339397006371848080319873597711167289984567255952373924998510034994291794367634144783572794762347678039420268406776521647668996231971334518831937104606968815498462909114281446705895502431776757357308623552695815013156773355343276103014380686549539112295547015984136057785817683176136672857058836433997863448608590310967n\\\"\",\"_p\":\"\\\"3571018152498762822201638720943960867597758523598992333150088336483347773956242222803065448213364822079795941987284598320387412113923424154497407726624666327835817416920056810973935679084046545592258347113232981850935984710161168773450320713975118639905553097371115690332878196142872363906864252453999198040101077198042912729635165524596579535691644604641544953609096446146746084836893723535956803565063381466721875510983986307483560346289083703974648131439537949n\\\"\",\"_q\":\"\\\"1335825343441420948126677293262852446047779831894829012332745894816549727649930579951020381921521603081172523534784759453778782849435179106751228428304741951179058291419357176329623116924977223835617550676814599525796621425433252230184866610250689981082402354549991151666439348561120985485323285378424000818875811447696587585306952201982016889410151146295447221370169603675491057767959940105718423869280264294753038134946102761315359908779147448077715654226948527n\\\"\",\"publicKey\":\"{\\\"n\\\":\\\"4770256549997208372696731427121505937520811387010203550237033839702686933235090168337461839180863969445920471279615602618947221308949337253315998263417979250947691662032269529496243598313704098886328041199738642718434261232896089458359765485320218825488069405145005354082427960683682867747785432631608558324066527389665686525708433724358879764452059175655005264860998459771384864596234725782533684522719444830308411098428127568672013002627490467022660219538255434356084743826582822935213689015168799887556539694331034998482478483445951383581643176340296172064309409855389007276958626087437960548475502697361473396427332525589915929148224503117931890101202966822087684318851912596399451733791285160978960067620712135038620611805113185868561813795322926730719061022985170845292346782305654685792574861081478332269562430933907150205269656735345154377904101509718676274297437458783031018442042889282893013956243937859173086151123n\\\",\\\"_n2\\\":\\\"22755347552791268943142856300817423043209652531184088448891995624385450657783842939139384883206708237458482329842740621559589910250526494976437871396307619277976557607460809957696561031950392726062235330271486320884732329110608447981543446365584710312143967618500996620829232395827995117702794018543570337651741620645464073481775671065481348423889826017277924067773199763042523689055125960473792225026980173926027790015166213071865935600608762212868086173875522837821599532925781858331646607871631276856511793840267528725777718957139145249031399646841131350429222196010294566009179616897984050023623426862999714225833173981377217810979769064789334273222292122133222548255938052984876590633829452914061130624181651784874801157431468661844609941260871822970219494455149147345323647835239454322496448921370136392920774710788324131202502892798999274251752178542760012626011223826829665277736475103570265488383073494320045186738223018768896513267207123404154790622791337794867075309352755315588242883698575800894382768100162544959024974023207572127574787239614719717794028099588478423409419916380869100610949835569635374953234158739438941074030112263668579464975741669027769433079101022927065253486226796367290230998666521088808450422802642776882025380410324998192186037480187047635710262539177025949604491898722569811111714553698585652428995460036495776273031050426715153635919392965697438801361905635300862027858224198660292144849414889924749219539671252029533906148473615024500296685428774482812509988183176811102920040803477409978893938455414929844612956477925703246586321430272030175029793153104233849685588778689314881863914552312297761831392264858882407861704829461421407609797657447206610149961116719847990992783952396378964215585370670407979769323907155373635585084312082823098774215707379610157408775339559780711596276556460948947024573994161129n\\\",\\\"g\\\":\\\"4062950315983168936454403165614297525960939089882735657828954252076233454848447827390504873935225605792302460951929610094208246114982543091256101735010858760072652232060444435336539678631908063682364560913080416497300678136336943525489094143991519468440857547445770757744680002594235279352050713754123599563963401034398086399926376762586569205057068619240607903273822525636205562712256359993551741399066048697587804161481057242330844850411479911940442237630170934871233879186995095535661596341426973914148249029784057720417490513327924299789763837419521774461520817531938656936859443528495429961639587913807091190498153638517388807622102350485898655571947698392607603873776444265756038045205219083847870045485587349270674179054452633570869165196525405909884434519546022065360823333721467985407680375677544509712204301236292252664445696848382215361877711166069769328308388044712436743047780896334406028208965115782529018520841782053301770886700176105556695222581796285646025799309529326586632262432718530515748582971620668139497085633230901012686712766225419789223436470684736001264568503297813566514166827077409425370578477949535814475906402019950790194501411275154933353906035229590457198579996930092586444012639276826584436244544792786698252144725030035876960482858351589673335864236725101853455128982873128076870676791869362906057311658216198470385022788761206095808184396228564232990929654700754309187170037006900008587409344866188231391804599163365050370996844934696953094995847827462969865669270727180261947134879307381904795395379268644252002421036953758656529343861482105205473391114664823739684605472839117167275875369728944934031998460135712816552198935813525858627915081494937975006748817636067174020420361446096175374571310704346698933102009703323765203629469586768080415992135337216876315372756798035934082120253850411135556651331732461n\\\"}\"}\n\n  `)\n\n  // fetching files \n  useEffect( async () => {\n    \n    fetch(`${server}/viewDB`)\n  .then ( response => response.json())\n  .then(data => {\n    console.log(data)\n    let filesList = []\n    for (let i = 0; i < data.length; i++) {\n      const file = data[i];\n      filesList.push(<Card name={file.title} id={file.id} ></Card>)\n      \n    }\n    setFiles(filesList)\n  })\n  }, []);\n\n  const enableModal = () =>{\n    setshowModal(true)\n  }\n  return (\n    <Router>\n      {/* <Route path=\"/\" exact component={home}/>\n      <Route path=\"/about\" component={About}/> */}\n    <div className=\"App\">\n     \n      {/* <Route path=\"/\" exact component={CardList} files={files}/>  */}\n      {/* <Route path=\"/\" component={CardList}/>  */}\n      <div className=\"mybutton-1 mt4\" onClick={enableModal}><span>Create New file</span></div>\n      {showModal ? \n      <Modal showModal={showModal} setshowModal={setshowModal} server={server}></Modal>\n      : \"\"}\n      <div>\n        {files}\n        {/* <Card name=\"Choosen cipher text and suggestions\" id=\"test\" email=\"test\"></Card>\n        <Card name=\"hi\" id=\"test\" email=\"test\"></Card>\n        <Card name=\"hi\" id=\"test\" email=\"test\"></Card>\n        <Card name=\"hi\" id=\"test\" email=\"test\"></Card>\n        <Card name=\"hi\" id=\"test\" email=\"test\"></Card>\n        <Card name=\"hi\" id=\"test\" email=\"test\"></Card> */}\n        </div>\n    </div>\n    </Router>\n\n  );\n}\n\nexport default App;\n","import \"./App.css\";\r\n\r\nimport React,{useState,useRef, useEffect, Fragment} from 'react';\r\nimport { ScrollSync, ScrollSyncPane } from 'react-scroll-sync';\r\nimport DOMPurify from \"dompurify\";\r\n\r\n// import {Route, BrowserRouter as Router} from 'react-router-dom'\r\nimport Card from \"./components/Card\";\r\n\r\nconst paillierBigint = require('paillier-bigint')\r\n\r\n\r\n\r\nfunction Editor(props) {\r\n    const [server ,setServer] = useState(\"https://homomorphic-server.herokuapp.com\");\r\n\r\n    const [selectionStart, setSelectionStart]= useState()\r\n    // const [orValue, setorValue] = useState({__html: `This <span className=\"aka\">is a</span> demonstration.`});\r\n    const [orValue, setorValue] = useState(`This is a demonstration.`);\r\n    const [areaOrValue, setareaOrValue] = useState(`This is a demonstration.`);\r\n\r\n    // const [orValueEditable, setorValueEditable] = useState(`This is a demonstration.`);\r\n    const [orValueEditable, setorValueEditable] = useState({__html:`This <span class=\"aka\">is a</span> demonstration.`});\r\n    const [prevValueEditable, setprevValueEditable] = useState(`This <span class=\"aka\">is a</span> demonstration.`);\r\n\r\n\r\n    const [areaOrValueEditable, setareaOrValueEditable] = useState(`This is a demonstration.`);\r\n\r\n    const [originalPlainText, setoriginalPlainText] = useState([]);\r\n    const [currentSelection, setcurrentSelection] = useState([0,0]);\r\n\r\n    const [disable, setDisable] = useState(false)\r\n\r\n    const [originalText, setoriginalText] = useState([]);\r\n\r\n    const [reloadFile, setreloadFile] = useState(false);\r\n\r\n\r\n    const fileId = props.location.pathname.replace(\"/file/\",\"\")\r\n    var [myPublicKey, setmyPublicKey] =  useState();\r\n    var [myPrivateKey, setmyPrivateKey] = useState();\r\n    // console.log(fileId);\r\n    const textInput = useRef(null); \r\n\r\n    const setAreas = (text) =>{\r\n      setorValue(text)\r\n      setareaOrValue(text)\r\n    }\r\n    const setAreas2 = (text) =>{\r\n      setprevValueEditable(text)\r\n      setorValueEditable({__html:text})\r\n      setareaOrValueEditable(text)\r\n    }\r\n\r\n    const onAreaChange = (event) =>{\r\n        //location of the cursur \r\n        console.log(textInput);\r\n        // console.log(textInput.current.selectionStart);\r\n        console.log(event.target.value); \r\n        let passedValue =      event.target.value  \r\n        passedValue = passedValue.replace(\"<\",\"◄\")\r\n        passedValue = passedValue.replace(\">\",\"►\")\r\n        console.log(passedValue);\r\n\r\n        \r\n        // DOMPurify.addHook(\"beforeSanitizeAttributes\", function (node, data) {\r\n        //   // Set text node content to uppercase\r\n        //   console.log(node.textContent);\r\n\r\n        //   if (node.nodeName && node.nodeName === \"#text\") {\r\n            \r\n        //     // let textnode = document.createTextNode(\"<\")\r\n        //     // console.log(typeof(textnode));\r\n        //     node.textContent = node.textContent.replace(\"<\",\"◄\")\r\n        //     node.textContent = node.textContent.replace(\">\",\"►\")\r\n\r\n        //     // console.log ( node.textContent)\r\n        //     // node.textContent = node.textContent.toUpperCase();\r\n        //   }\r\n        // });\r\n\r\n        let changeTo = DOMPurify.sanitize(passedValue\r\n          , {\r\n          ALLOWED_TAGS: [\"span\"],\r\n          ALLOWED_ATTR: [\"class\",\"className\"]\r\n        }\r\n        )\r\n        // let changeTo = event.target.value\r\n        // setorValue({__html: changeTo})\r\n        setorValue(changeTo)\r\n        setareaOrValue(changeTo)\r\n    }\r\n\r\n    const onAreaChangeEditable = (event) =>{\r\n      console.log(\"area change\", currentSelection)\r\n      console.log(event)\r\n      //location of the cursur \r\n      console.log(textInput);\r\n      // console.log(textInput.current.selectionStart);\r\n      let passedValue =      event.target.value\r\n        passedValue = passedValue.replace(\"<\",\"◄\")\r\n        passedValue = passedValue.replace(\">\",\"►\")\r\n        event.target.value = event.target.value.replace(\"<\",\"◄\")\r\n        event.target.value = event.target.value.replace(\">\",\"►\")\r\n      console.log(passedValue);\r\n\r\n\r\n      // if((currentSelection[0] === currentSelection[1]) && currentSelection[0]>originalPlainText.length){\r\n      //   let temp = prevValueEditable\r\n      //   let holder = DOMPurify.sanitize(temp, {\r\n      //     ALLOWED_TAGS: [\"\"],\r\n      //     ALLOWED_ATTR: [\"\"]\r\n      //   }).length\r\n\r\n      //   console.log(temp , \"temp\" , holder ,temp.length, passedValue.length)\r\n      //   passedValue = `${temp}<span class=\"midori\">${passedValue.slice(holder)}</span>`\r\n      //   console.log(passedValue , \"temp2222\")\r\n      // }\r\n      // setprevValueEditable(passedValue)\r\n      // DOMPurify.addHook(\"beforeSanitizeAttributes\", function (node, data) {\r\n      //   // Set text node content to uppercase\r\n      //   console.log(node.textContent);\r\n\r\n      //   if (node.nodeName && node.nodeName === \"#text\") {\r\n          \r\n      //     // let textnode = document.createTextNode(\"<\")\r\n      //     // console.log(typeof(textnode));\r\n      //     node.textContent = node.textContent.replace(\"<\",\"◄\")\r\n      //     node.textContent = node.textContent.replace(\">\",\"►\")\r\n\r\n      //     // console.log ( node.textContent)\r\n      //     // node.textContent = node.textContent.toUpperCase();\r\n      //   }\r\n      // });\r\n\r\n      let changeTo = DOMPurify.sanitize(passedValue\r\n        , {\r\n        ALLOWED_TAGS: [\"span\"],\r\n        ALLOWED_ATTR: [\"class\",\"className\"]\r\n      }\r\n      )\r\n      console.log(changeTo , \"temp222\")\r\n\r\n      let changeTo2 = DOMPurify.sanitize(passedValue\r\n        \r\n      )\r\n      // let changeTo = event.target.value\r\n      // setorValue({__html: changeTo})\r\n      // setorValueEditable(changeTo)\r\n      setorValueEditable({__html: passedValue})\r\n      setareaOrValueEditable(event.target.value)\r\n  }\r\n\r\n    const SubmitToServer = async () =>{\r\n      setDisable(true)\r\n      setTimeout(function(){\r\n      let text = areaOrValueEditable\r\n      console.log(\"-----------\")\r\n      console.log(text)\r\n      let textArray = text.split(\"\")\r\n      console.log(textArray)\r\n      console.log(myPublicKey)\r\n      let zero = myPublicKey.encrypt(0)\r\n      let t0 = console.time('encryption');\r\n      for (let i = 0; i < textArray.length; i++) {\r\n        let letter = Number(textArray[i].charCodeAt(0));\r\n        if ( letter === 9668){\r\n          console.log(\"yes\")\r\n          letter = 16\r\n        }else if (letter === 9658){\r\n          letter = 6\r\n        }\r\n\r\n        if ( i < originalText.length){\r\n          if(originalText[i] < letter){\r\n            letter = letter - originalText[i]\r\n          }else if (originalText[i] > letter){\r\n            let temp = 127 - originalText[i]\r\n            letter = letter + temp \r\n          }\r\n          else{\r\n            letter = 0;\r\n            textArray[i] = stringify(zero)\r\n            continue\r\n          }\r\n        }\r\n        textArray[i] = stringify(myPublicKey.encrypt(letter))\r\n      }\r\n      let t1 = console.timeEnd('encryption');\r\n      // textArray = JSON.stringify(textArray)\r\n      console.log(\"the text array\",textArray);\r\n      console.log(\"Time to encrypt: \",t1);\r\n      fetch(`${server}/update/${fileId}`,\r\n      {\r\n        method: 'post',\r\n        headers :{ 'content-type':'application/json'},\r\n        body : JSON.stringify({\r\n          content : textArray\r\n        })\r\n      })\r\n      .then ( response => {\r\n        console.log(response)\r\n        // console.log(window.location.origin)\r\n        setDisable(false)\r\n      })\r\n      console.log(4)\r\n    }, 3000);\r\n    }\r\n\r\n\r\n    const onKeyPress = (event) =>{\r\n      console.log(event.keyCode, event.key);\r\n      console.log(\"keypress \", textInput.current.value);\r\n    }\r\n\r\n    const onClick = (event) =>{\r\n      console.log(event)\r\n      \r\n      let allowed = false\r\n      if (event.keyCode >= 48 && event.keyCode <= 57) {\r\n        // Number\r\n        allowed =true\r\n    } else if (event.keyCode >= 65 && event.keyCode <= 90) {\r\n        // Alphabet upper case\r\n        allowed =true\r\n    } else if (event.keyCode >= 97 && event.keyCode <= 122) {\r\n        // Alphabet lower case\r\n        allowed =true\r\n    }else if ( event.keyCode >= 186 && event.keyCode <= 192){\r\n      // special characters\r\n      allowed = true\r\n    }else if ( event.keyCode >= 219 && event.keyCode <= 222){\r\n      // special characters\r\n      allowed = true\r\n    }\r\n      \r\n      \r\n      console.log(event.keyCode, event.key);\r\n      event = event.target\r\n      console.log(\"keypress \", textInput.current.value);\r\n      console.log(event.selectionStart,\" \" ,event.selectionEnd);\r\n      // if we got a letter \r\n      // if(allowed){\r\n        // console.log(originalPlainText , \"here\")\r\n        setcurrentSelection([event.selectionStart,event.selectionEnd])\r\n      // }\r\n    }\r\n \r\n    function stringify(value) {\r\n      if (value !== undefined) {\r\n          return JSON.stringify(value, (_, v) => typeof v === 'bigint' ? `${v}n` : v);\r\n      }\r\n  }\r\n  function parse(text) {\r\n    return JSON.parse(text, (_, value) => {\r\n        if (typeof value === 'string') {\r\n            const m = value.match(/(-?\\d+)n/);\r\n            if (m && m[0] === value) {\r\n                value = BigInt(m[1]);\r\n            }\r\n        }\r\n        return value;\r\n    });\r\n\r\n   \r\n  }\r\n  const reload = () =>{\r\n    setDisable(true)\r\n    setTimeout(function(){\r\n    fetch(`${server}/${fileId}`)\r\n    .then ( response => response.json())\r\n    .then(data => {\r\n\r\n      let content = parse(data.content)\r\n        console.log(content)\r\n      let myText = \"\"\r\n      let originalText = []\r\n      for (let i = 0; i < content.length; i++) {\r\n        let element = Number(myPrivateKey.decrypt(content[i]))\r\n        element = element%127\r\n        originalText.push(element)\r\n        if( element === 16){\r\n          element = 9668\r\n        } else if ( element === 6) {\r\n          element = 9658\r\n        }\r\n\r\n        myText = myText + String.fromCharCode(element)\r\n      }\r\n      setoriginalText(originalText)\r\n      setAreas(myText)\r\n      // if (data.content != []){\r\n        \r\n      // }\r\n      \r\n\r\n      setDisable(false)\r\n      \r\n      // new PrivateKey(lambda, mu, publicKey, [p], [q])\r\n    })\r\n    .catch((error) => {\r\n      // (window.location.href = window.location.origin);\r\n      console.error('Error:', error);\r\n      setDisable(false)\r\n    });\r\n  }, 3000);\r\n    \r\n  }\r\n\r\n   //fetch the file \r\n   useEffect( async () => {\r\n    \r\n\r\n    fetch(`${server}/${fileId}`)\r\n    .then ( response => response.json())\r\n    .then(data => {\r\n      console.log(data)\r\n      data.publicKey = parse(data.publicKey)\r\n      setmyPublicKey (new paillierBigint.PublicKey(data.publicKey.n,data.publicKey.g))\r\n      let publicKey = new paillierBigint.PublicKey(data.publicKey.n,data.publicKey.g)\r\n      let foo = prompt(`Enter the given private key for file ID: ${fileId}`);\r\n      try {\r\n        var privateKey = JSON.parse( foo)\r\n      for (const key in privateKey) {\r\n          // console.log(privateKey.[`${key}`])\r\n          privateKey.[`${key}`] = parse(privateKey.[`${key}`])\r\n    \r\n        }\r\n        privateKey = new paillierBigint.PrivateKey(privateKey.lambda, privateKey.mu, privateKey.publicKey ,privateKey._p , privateKey._q)\r\n        setmyPrivateKey(privateKey)\r\n        let verify = \"a\".charCodeAt(0)\r\n        let verify2 = publicKey.encrypt(verify)\r\n        let verify3 = Number(privateKey.decrypt(verify2))\r\n        if (  verify3 !== verify){\r\n          // alert(verify + \" \"+  verify3)\r\n          throw \"wrong private public pairs\";\r\n        }\r\n        console.log(privateKey)\r\n        if ( privateKey.lambda === undefined) {\r\n          throw 'bad Key';\r\n        }\r\n      } catch (error) {\r\n        alert(\"Bad Key\")\r\n        // alert(error)\r\n        (window.location.href = window.location.origin);\r\n      }\r\n      let content = parse(data.content)\r\n        console.log(content)\r\n      let myText = \"\"\r\n      let originalText = []\r\n      for (let i = 0; i < content.length; i++) {\r\n        let element = Number(privateKey.decrypt(content[i]))\r\n        element = element%127\r\n        originalText.push(element)\r\n        if( element === 16){\r\n          element = 9668\r\n        } else if ( element === 6) {\r\n          element = 9658\r\n        }\r\n\r\n        myText = myText + String.fromCharCode(element)\r\n      }\r\n      setoriginalText(originalText)\r\n      setoriginalPlainText(myText)\r\n      setAreas(myText)\r\n      setAreas2(myText)\r\n      // if (data.content != []){\r\n        \r\n      // }\r\n      \r\n\r\n      \r\n      \r\n      // new PrivateKey(lambda, mu, publicKey, [p], [q])\r\n    })\r\n    .catch((error) => {\r\n      (window.location.href = window.location.origin);\r\n      console.error('Error:', error);\r\n    });\r\n    \r\n    }, []);\r\n    // create public private keys \r\n  useEffect( async () => {\r\n    \r\n    // const { publicKey, privateKey } = await paillierBigint.generateRandomKeys(3072)\r\n    // console.log(\"public\", publicKey)\r\n    // console.log(\"private\")\r\n    // for (const key in privateKey) {\r\n    //   // console.log(privateKey.[`${key}`])\r\n    //   privateKey.[`${key}`] = stringify(privateKey.[`${key}`])\r\n\r\n    // }\r\n    // let x = JSON.stringify( privateKey)\r\n    // console.log(x)\r\n    // console.log(JSON.parse( x))\r\n  //   const m1 = \"t\".charCodeAt(0)\r\n  //   const c1 = publicKey.encrypt(m1)\r\n  //   const stringed = (stringify(c1))\r\n  //   const stringedPK = (stringify(publicKey))\r\n  //   console.log(typeof(c1))\r\n  //   fetch('http://localhost:4000/id',\r\n  // {\r\n  //   method: 'post',\r\n  //   headers :{ 'content-type':'application/json'},\r\n  //   body : JSON.stringify({\r\n  //     message: stringed,\r\n  //     publicKey: stringedPK\r\n  //   })\r\n  // })\r\n  // .then ( response => response.json())\r\n  // .then(data => {\r\n  //   data = privateKey.decrypt(parse(data))\r\n  //   console.log(data)\r\n  //   console.log(String.fromCharCode(Number(data)%127))\r\n  // })\r\n  console.log(\"keep alive\")\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <div>\r\n        <div></div>\r\n      <ScrollSync>\r\n        <div className=\"textAreas\">\r\n            <h2> Server-side text : </h2>\r\n           \r\n            <div className=\"container\">\r\n              <ScrollSyncPane>\r\n              <div className=\"textHigh\" \r\n              // dangerouslySetInnerHTML={orValue}\r\n              >\r\n              {orValue}\r\n              </div>\r\n              </ScrollSyncPane>\r\n              <ScrollSyncPane>\r\n\r\n              <textarea className=\"textArea shadow-2\" value={areaOrValue} onChange={onAreaChange} disabled={true}>\r\n                \r\n                {/* This is a demonstration. */}\r\n              </textarea>\r\n              </ScrollSyncPane>\r\n\r\n            </div>\r\n            {/* </ScrollSync> */}\r\n\r\n            {/* <HighlightWithinTextarea\r\n            className=\"textArea tl\"\r\n            containerClassName=\"textArea textAreaCont tl\"\r\n            value={value}\r\n            highlight={/[XYZ]/g}\r\n            onChange= { onAreaChange }\r\n            textAreaRef={textInput}\r\n    /> */}\r\n            {/* <textarea className=\"db  textArea shadow-2\" ref={textInput} onChange={onAreaChange} onClick={onAreaChange} onKeyDown={onKeyPress}></textarea> */}\r\n          \r\n\r\n\r\n          <h2 className=\"H2sizeFixing\"> Editable text : </h2>\r\n          {/* <ScrollSync> */}\r\n\r\n          <div className=\"container\">\r\n              <ScrollSyncPane>\r\n              <div className=\"textHigh\"\r\n                            dangerouslySetInnerHTML={orValueEditable}\r\n              >\r\n                {/* {orValueEditable} */}\r\n              </div>\r\n              </ScrollSyncPane>\r\n              <ScrollSyncPane>\r\n\r\n              <textarea className=\"textArea shadow-2\" value={areaOrValueEditable} onChange={onAreaChangeEditable}\r\n              ref={textInput}\r\n              // onClick={onClick}\r\n              // onKeyDown={onClick}\r\n              // onKeyUp={onClick}\r\n              onKeyPress={onClick}\r\n              >\r\n              </textarea>\r\n              </ScrollSyncPane>\r\n\r\n            </div>\r\n            {/* </ScrollSync> */}\r\n\r\n        </div>\r\n        </ScrollSync>\r\n        {/* <button className=\"center shadow-5   br3 mybutton\" onClick={SubmitToServer}> Update and send to server</button> */}\r\n        {\r\n          disable? \r\n          <div className=\"dib button center shadow-5   mybutton\" ><span>Updating... <span className=\"ld ld-spinner ld-clock\"></span></span></div>\r\n          :\r\n        <Fragment>\r\n          <div className=\"dib button center shadow-5   mybutton\"  onClick={ async () => {return await SubmitToServer()}} ><span>Update and send to server</span></div>\r\n\r\n        <div className=\"dib button shadow-5     mybutton\" onClick={async () => {return await reload()}}><span>Update current content</span></div>\r\n        </Fragment>\r\n        }\r\n        {/* <button className=\"button shadow-5  ma4   mybutton\" onClick={reload}> Update current content</button> */}\r\n\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Editor;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport './loading.min.css'\nimport './transition.min.css'\nimport App from './App';\nimport Editor from './Editor';\n\nimport reportWebVitals from './reportWebVitals';\nimport {Route, HashRouter as Router, Switch} from 'react-router-dom'\nimport \"tachyons\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <div className=\"header  \">\n        <a href=\"/\">\n      <h1 className=\"tl   \">\n      Public Homomorphic service\n      </h1>\n      </a>\n      </div>\n    <Router>\n      <Switch>\n        <Route path=\"/file/:id\" exact  component={Editor} />\n        <Route path=\"/\"  component={App} />\n\n      </Switch>\n    </Router>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}